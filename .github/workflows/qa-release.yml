# This is a workflow to help with continuous delivery of Stax App to the testing tracks and release track on Play Store

name: QA Release Workflow

# Define when the action will run
on:
  # Triggers the workflow on push events to the specified branch
  push:
    branches: [ qa ]

# Define jobs to be run sequentially or parallel
jobs:
  # First job to be run called "build"
  build:
    # The type of runner the job will run on
    runs-on: ubuntu-latest

    # Sequence of tasks that will be executed as part of the job
    steps:

      # Checkout the repository so that the job can access it
      - name: checkout
        uses: actions/checkout@v3


      # Set up our gradle properties for access by the Android build
      - name: set up gradle properties
        env:
          HoverUsername: ${{ secrets.HOVER_USERNAME }}
          HoverPassword: ${{ secrets.HOVER_PASSWORD }}
        shell: bash
        run: |
          mkdir ~/.gradle
          echo "GRADLE_USER_HOME=$HOME/.gradle" >> $GITHUB_ENV
          echo "HoverUsername=$HoverUsername" >> ~/.gradle/gradle.properties
          echo "HoverPassword=$HoverPassword" >> ~/.gradle/gradle.properties


      # Set up JDK 1.8 for use
      - name: set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          # Specify a supported distribution and java version to run
          distribution: 'zulu'
          java-version: 11


      # Run the assembleRelease gradle command to start the build process for our buildVariant
      - name: Assemble QA Bundle
        id: buildBundle
        uses: gradle/gradle-build-action@v2
        with:
          # Can be overridden with the desired gradle version
          gradle-version: 7.3.3
          # Specifies the gradle command to be run, can be replaced with any desired task
          arguments: bundleRelease


      # Sign the generated apk
      - name: Sign artifact
        id: signArtifact
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      #Deploy to alpha track
      - name: Deploy to internal test track
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT }}
          packageName: com.hover.stax
          releaseFiles: app/build/outputs/bundle/release/*.aab
          track: internal
#          whatsNewDirectory: whatsnew/

      # Start release checklist
      - name: Start Manifestly release checklist
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.manifest.ly/api/v1/runs/?api_key=${{ secrets.MANIFESTLY_KEY }}'
          method: 'POST'
          data: '{ "checklist_id": 55793, "channel": "stax-releases", "title": "Test checklist run"}'


      # Send slack notification
      - name: Send Slack notification
        uses: Ilshidur/action-slack@2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.STAX_SLACK_WEBHOOK }}
          SLACK_USERNAME: StaxDeploymentBot
          SLACK_CHANNEL: stax
          SLACK_AVATAR: sender
        with:
          args: 'Stax has just been deployed to Play Store internal track. :truck:'









